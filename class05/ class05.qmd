---
title: "Class 5: Data visualization with gg plot"
author: "Solomon (PID: A16784354)"
format: html
toc: true
---

Today we will have our first play with the **ggplot2** package - one of the most popular graphics on the planet. 

There are many plotting systems in R. These include so called *"base"* plotting/graphics.

```{r}
plot(cars)
```

base plot is generally rather short code and somewhat dull plots - but it is always there for you and is fast for big data sets. 


If I want to use **ggplot2** it takes some more work. 

```{r}
# ggplot(cars)
```


I need to install the package first to my computer. To do this I can use the function `install.packages("ggplot2")`

Everytime I want to use a package I need to load it up with a `library()` call. 

```{r}
library(ggplot2)
```

```{r}
ggplot(cars)
```



Every ggplot has at least 3 things: 

- **data** (the data.frame with the data you want to plot)
- **aes** (the asthetic mapping of the data to the plot)
- **geom** (how do you want the plot to look, points, lines, etc)


```{r}
ggplot(cars) + aes(x=speed, y=dist) + geom_smooth()
```


I want a linear modela nd no standard error bounds shown on my plor. I also want nicer axis labels a title etc. 


```{r}
bp <- ggplot(cars) + aes(x=speed, y=dist) + geom_point()
```


```{r}
bp + geom_smooth(se=FALSE, method = "lm") + labs(title="Stopping Distance of Old Cars", x="speed (MPH)", y="Distance (ft)", caption= "From the 'cars' dataset") + theme_bw()
```
```{r}
ggplot(mtcars, aes(mpg, disp)) + geom_point()
```

```{r}
ggplot(mtcars) + aes(x=mpg, y=disp) + geom_point()
```


# A more complicated scatter plot 

Here we make a plot of gene expression data: 

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
nrow(genes)
colnames(genes)
ncol(genes)

```

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
table(genes$State)  

```

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
round( sum(genes$State == "up")/ nrow(genes) * 100, 2)


```




```{r}
head(genes, 2)
```

```{r}
p <- ggplot(genes) + aes(x=Condition1, y=Condition2, col=State) + geom_point()

```


Change the colors

```{r}
p + labs(title= "Some nice title") + scale_colour_manual( values=c("blue","gray","red") )

```

## Exlporing there gapmider dataset

Here we will load up the gapmider dataset to get practice with driffent aes mapings.

```{r}
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"

gapminder <- read.delim(url)
```

How many entries rows are in this dataset?

```{r}
nrow(gapminder)
```

```{r}
ncol(gapminder)
```

```{r}
dim(gapminder)
```


```{r}
head(gapminder)
```



```{r}
table(gapminder$year)


```

How many continents 

```{r}
table(gapminder$continent)  
```

I could use the 'unique()' function

```{r}
length(unique(gapminder$continent))
```


how many countries in data set?

```{r}
length(unique(gapminder$country))
```

```{r}

ggplot(gapminder) + aes(x=gdpPercap, y=lifeExp, color=continent, size=pop) + geom_point(alpha=0.5)
```
```{r}
library(dplyr)

gapminder_2007 <- filter(gapminder, year==2007)

head(gapminder_2007)

```
```{r}
ggplot(gapminder_2007) + aes(x=gdpPercap, y=lifeExp, col=continent, size=pop) + geom_point(alpha=0.2)
```


```{r}
ggplot(gapminder) + aes(x=gdpPercap, y=lifeExp) + geom_point() + facet_wrap(~continent)
```

```{r}
ggplot(cars, aes(mpg, disp)) + geom_point()
```



