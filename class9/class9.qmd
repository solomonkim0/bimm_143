---
title: "class09: Candy Analysis Mini Project"
author: "Solomon Kim"
format: pdf
---

In today's class we will examine some data about candy from the 538 website


## Import Data
```{r}
candy_file <- read.csv("candy-data.csv")
candy = data.frame(candy_file, row.names=1)
head(candy)
```

## Data exploration


>Q1. How many different candy types are in this dataset?

There are `r nrow(candy)` candy in this data set

```{r}

nrow(candy)

```

>Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity == 1)
```

>Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

## My favorite Candy vs Yours

```{r}
candy["Snickers",]$winpercent
```



```{r}
candy["Air Heads",]$winpercent
```
>Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat",]$winpercent
```
>Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```



>Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?


```{r}
library("skimr")
skim(candy)
```

```{r}
skimr::skim(candy)
```
Win percent is on a different scale compared to the other variables


>Q7. What do you think a zero and one represent for the candy$chocolate column?


#```{r}
#candy
#candy$chocolate
#```

1 represents if there is chocolate for the candy and 0 means no chocolate

>Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent)
```



```{r}
library(ggplot2)
ggplot(candy) + aes(winpercent) + geom_histogram(binwidth=7)
```

>Q9. Is the distribution of winpercent values symmetrical?

No

>10. Is the center of the distribution above or below 50%?

below

```{r}
mean(candy$winpercent)
summary(candy$winpercent)
```


>Q11. On average is chocolate candy higher or lower ranked than fruit candy?

- first find all chocolate candy
- Find their winpercent values
- calculate the mean of these values 

- then do the same for furity candy and compare with the mean for choclate candy 

```{r}
chocolate.inds <- candy$chocolate == 1 
chocolate.win <- candy[chocolate.inds,]$winpercent
mean(chocolate.win)

```

```{r}
fruity.inds <- candy$fruity == 1 
fruity.win <- candy[fruity.inds,]$winpercent
mean(fruity.win)

```

Chocolate is higher ranked

#```{r}
#fruit.inds <- as.logical(candy$fruity)
#fruit.win <- candy[fruit.inds]$winpercent
#mean(fruit.win)
#```

 

>Q12. Is this difference statistically significant?

```{r}
t.test(chocolate.win, fruity.win)
```
yes


>Q13. What are the five least liked candy types in this set?


```{r}
x <- c(5,6,4)
sort(x)
order(x)
x[order(x)]
```

The order function returns the indicies that make the input sorted

```{r}
inds <- order(candy$winpercent)
head(candy[inds, ])
```
5 least are Nik L Nip, Boston Baked Beans, Chicles, Super Bubble, Jawbusters, Root Beer Barrels


>Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
inds <- order(candy$winpercent)
tail(candy[inds, ])
```
the top 5 are Reese's pieces, snikcers, Kit Kat, Twix, Reese's Miniatures

>Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy, aes(x=winpercent, y=rownames(candy))) + geom_col()
```




>Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
#| fig-height: 10
#| fig-width: 7


ggplot(candy) + aes(winpercent, reorder(rownames(candy), winpercent)) + geom_col(fill=c("blue"))

```


```{r}
ggsave("mybarplot.png", height=10)

```

![Exported image that is a bit bigger so I can read it](mybarplot.png)


Add my custom colors to my barplot

```{r}
my_cols=rep("gray", nrow(candy))
my_cols


my_cols[candy$fruity == 1] <- "pink"
my_cols

my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "red"
```

```{r}
#| fig-height: 10
#| fig-width: 7


ggplot(candy) + aes(winpercent, reorder(rownames(candy), winpercent)) + geom_col(fill=my_cols)

```




>Q17. What is the worst ranked chocolate candy?

sixlets

>Q18. What is the best ranked fruity candy?

Starbursts


plot of winpercent vs priceprecent 

```{r} 
ggplot(candy) + aes(winpercent, pricepercent, label =rownames(candy)) + geom_point(col=my_cols) + geom_label(coinl=my_cols)
```

There are just too many labels in this above plot to be readable. We can use the `ggrepel` package to do a better job of placing labels so they minimize text overlap. 

```{r}
library(ggrepel)

ggplot(candy) + aes(winpercent, pricepercent, label =rownames(candy)) + geom_point(col=my_cols) + geom_text_repel(coinl=my_cols, max.overlaps =5)


```
```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```


>Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

reese's minatures

>Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

Nik L Nip, Nestle Smarties, Ring pop, Hershey's Krachel, Hershey's Milk Chocolate

## 5 Exploring the correlation structure

```{r}
library(corrplot)

cij <- cor(candy)
cij
```

```{r}
corrplot(cij)
```

>Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Fruity and chocolate 

>Q23. Similarly, what two variables are most positively correlated?

Chocolate and winpercent



## Principal Component Analysis

We will perform a PCA of the candy. Key-question: do we need to scale the data before PCA?

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

```{r}
plot(pca$x[,1], pca$x[,2], col = my_cols, pch=16)

```

Make a ggplot version of this figure: 

```{r}
# make a new data-frame with our PCA results and candy data 
my_data <- cbind(candy, pca$x[,1:3])
head(my_data)

```

```{r}
ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols) + geom_text_repel(col=my_cols)

```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```
```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```



```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```


#```{r}

#library(plotly)
#ggplotly(p)
#```


How do the original variables contribute to our PCs? For this we look at the loadins component of our results object i.e. the `pca$rotation` object.

```{r}
head(pca$rotation[,1])
```
Make a barplot with ggplot and order the bars by their value. Recall that you need a data.frame as input for ggplot. 

```{r}
res <- as.data.frame(pca$rotation)
ggplot(res) + aes(PC1, reorder(row.names(res), PC1)) + geom_col()
```

>Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity, Hard, pluribus ; these variables do make sense based on the correlation values in the dataset. 



